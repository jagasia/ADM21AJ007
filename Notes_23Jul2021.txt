JPA repository		create alter tables as per java classes
			proven efficient		
			you are loading large volume of records many times
			jpa is very smart that if data has no change (select)
			it will not update
we do not have JPA in our syllabus

we do not have spring boot security in our syllabus

jdbc template
	service
		autowired a repo. instead of that autowire a jdbctemplate
	controller
		no changes required
	Entity
		just remove the annotationa		@Entity	@Table	@Id	@GeneratedValue

	in addition to that
	we need to create a @Bean 	getDataSource

1) during second stage, 
	you learnt spring 
	applicationContext.xml	
	bean.xml
	spring.xml
		all of these are same
		<bean id=ds class="....DataSource">
			url
			username
			password
			driverClassName
		</bean>
		<bean	id=		class="....JdbcTemplate">
			<property name="dataSource" ref="ds" />
		</bean

	

But now in spring boot, we do not like to use xml configuration
	we like to use Annotations 
	and autowire it 

@Configuration
public class.....
{
	@Bean public DataSource getDataSource()
	{
	}
}

@Component		i cannot use now because, i am not writing the source of JdbcTemplate
@Bean


@Service
public class EmployeeService
{		
	@Autowired
	private JdbcTemplate jt;			//data source?????		jt depends on datasource
}



in application.properties
these info are automatically captured by DataSource bean
